---
default_install_hook_types:
  - pre-commit
  - commit-msg
repos:
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        additional_dependencies:
          - .[toml]
        args:
          - "-c"
          - "pyproject.toml"
          - "-x"
          - "tests"
          - "-r"
          - "pi_portal"
        pass_filenames: false
        stages: [pre-commit]
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.22.0
    hooks:
      - id: check-jsonschema
        name: check-github-workflow-push-schema
        files: "^\\.github/config/workflows/workflow-push.json$"
        args:
          - "--schemafile"
          - ".github/config/schemas/workflows/workflow-push.json"
        stages: [pre-commit]
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.2.2
    hooks:
      - id: commitizen
        stages: [commit-msg]
  - repo: https://github.com/akaihola/darglint2
    rev: v1.8.2
    hooks:
      - id: darglint2
        stages: [pre-commit]
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        types: []
        files: "^.+\\.pyi?$"
        stages: [pre-commit]
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        name: pydocstyle (production)
        args:
          - "--config=./.pydocstyle"
        files: "^pi_portal/((?!test).)*\\.py$"
        stages: [pre-commit]
      - id: pydocstyle
        name: pydocstyle (tests)
        args:
          - "--config=./.pydocstyle.tests"
        files: "^pi_portal/.*test.*\\.py$"
        stages: [pre-commit]
  - repo: https://github.com/cicd-tools-org/pre-commit.git
    rev: 0.3.0
    hooks:
      - id: format-shell
        args:
          - "-w"
          - "--indent=2"
          - "-ci"
          - "-sr"
      - id: format-toml
      - id: lint-github-workflow-header
      - id: lint-github-workflow
      - id: lint-markdown
        args:
          - "-c"
          - ".markdownlint.yml"
          - "--ignore"
          - "documentation/source"
      - id: lint-shell
        args:
          - "--color=always"
          - "--source-path=SCRIPTDIR"
          - "--exclude=SC2317"
          - "-x"
      - id: security-credentials
      - id: spelling-commit-message
      - id: spelling-markdown
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.33.0
    hooks:
      - id: yamllint
        args:
          - "-c"
          - "./.yamllint.yml"
        stages: [pre-commit]
  - repo: https://github.com/google/yapf
    rev: v0.40.2
    hooks:
      - id: yapf
        name: "yapf"
        args:
          - "-i"
          - "--parallel"
        types: []
        files: "^.+\\.pyi?$"
        stages: [pre-commit]
        require_serial: true
  - repo: local
    hooks:
      - id: lint-python
        name: "lint-python"
        language: system
        entry: poetry
        args:
          - "run"
          - "pytest"
          - "-m"
          - "pylint"
          - "--pylint"
        files: "^.+\\.py$"
        pass_filenames: false
        require_serial: true
        stages: [pre-commit]
      - id: types
        name: "types"
        language: system
        entry: poetry
        args:
          - "run"
          - "mypy"
          - "--strict"
          - "--show-error-codes"
          - "--implicit-reexport"
          - "--explicit-package-bases"
        files: "^.+\\.pyi?$"
        pass_filenames: false
        require_serial: true
        stages: [pre-commit]
