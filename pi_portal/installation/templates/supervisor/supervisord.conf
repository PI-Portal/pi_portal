; supervisor config file

[unix_http_server]
file={{ PATH_SUPERVISOR_SOCKET }}               ; (the path to the socket file)
chmod=0770
chown={{ PI_PORTAL_USER }}:root

[supervisord]
logfile={{ SUPERVISOR_LOG_PREFIX }}d.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor
minfds=1000000

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix://{{ PATH_SUPERVISOR_SOCKET }} ; use a unix:// URL  for a unix socket

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

[include]
files = /etc/supervisor/conf.d/*.conf

[program:bot]
user={{ PI_PORTAL_USER }}
environment=HOME="/var/run",USER="{{ PI_PORTAL_USER }}"
command=/bin/bash -c "source '{{ PI_PORTAL_INSTALL_LOCATION }}/bin/activate'; python -m pi_portal slack_bot"
process_name=%(program_name)s
numprocs=1
directory=/var/run
priority=1000
autostart=true
autorestart=unexpected
startsecs=5
startretries=50
exitcodes=0
stopsignal=TERM
stopwaitsecs=10
redirect_stderr=false
stderr_logfile={{ LOG_PREFIX_SUPERVISOR }}.bot.err.log
stdout_logfile={{ LOG_PREFIX_SUPERVISOR }}.bot.out.log
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_capture_maxbytes=1MB

[program:camera]
command=/usr/bin/motion
process_name=%(program_name)s
numprocs=1
directory=/var/run
priority=1000
autostart=true
autorestart=unexpected
startsecs=5
startretries=50
exitcodes=0
stopsignal=TERM
stopwaitsecs=10
redirect_stderr=false
stderr_logfile={{ LOG_PREFIX_SUPERVISOR }}.camera.err.log
stdout_logfile={{ LOG_PREFIX_SUPERVISOR }}.camera.out.log
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_capture_maxbytes=1MB

[program:contact_switch_monitor]
user={{ PI_PORTAL_USER }}
environment=HOME="/var/run",USER="{{ PI_PORTAL_USER }}"
command=/bin/bash -c "source '{{ PI_PORTAL_INSTALL_LOCATION }}/bin/activate'; python -m pi_portal contact_switch_monitor"
process_name=%(program_name)s
numprocs=1
directory=/var/run
priority=1000
autostart=true
autorestart=unexpected
startsecs=5
startretries=50
exitcodes=0
stopsignal=TERM
stopwaitsecs=10
redirect_stderr=false
stderr_logfile={{ LOG_PREFIX_SUPERVISOR }}.contact_switch_monitor.err.log
stdout_logfile={{ LOG_PREFIX_SUPERVISOR }}.contact_switch_monitor.out.log
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_capture_maxbytes=1MB

[program:filebeat]
command={{ FILE_BEAT_BINARY }} -c {{ FILE_BEAT_CONFIG }}
process_name=%(program_name)s
numprocs=1
directory=/var/run
priority=1000
autostart=true
autorestart=unexpected
startsecs=5
startretries=50
exitcodes=0
stopsignal=TERM
stopwaitsecs=10
redirect_stderr=false
stderr_logfile={{ LOG_PREFIX_SUPERVISOR }}.filebeat.err.log
stdout_logfile={{ LOG_PREFIX_SUPERVISOR }}.filebeat.out.log
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_capture_maxbytes=1MB

[program:task_scheduler]
user={{ PI_PORTAL_USER }}
environment=HOME="/var/run",USER="{{ PI_PORTAL_USER }}"
command=/bin/bash -c "source '{{ PI_PORTAL_INSTALL_LOCATION }}/bin/activate'; python -m pi_portal task_scheduler"
process_name=%(program_name)s
numprocs=1
directory=/var/run
priority=1000
autostart=true
autorestart=unexpected
startsecs=5
startretries=50
exitcodes=0
stopsignal=TERM
stopwaitsecs=10
redirect_stderr=false
stderr_logfile={{ LOG_PREFIX_SUPERVISOR }}.task_scheduler.err.log
stdout_logfile={{ LOG_PREFIX_SUPERVISOR }}.task_scheduler.out.log
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_capture_maxbytes=1MB

[program:temp_monitor]
user={{ PI_PORTAL_USER }}
environment=HOME="/var/run",USER="{{ PI_PORTAL_USER }}"
command=/bin/bash -c "source '{{ PI_PORTAL_INSTALL_LOCATION }}/bin/activate'; python -m pi_portal temp_monitor"
process_name=%(program_name)s
numprocs=1
directory=/var/run
priority=1000
autostart=true
autorestart=unexpected
startsecs=5
startretries=50
exitcodes=0
stopsignal=TERM
stopwaitsecs=10
redirect_stderr=false
stderr_logfile={{ LOG_PREFIX_SUPERVISOR }}.temp_monitor.err.log
stdout_logfile={{ LOG_PREFIX_SUPERVISOR }}.temp_monitor.out.log
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stdout_capture_maxbytes=1MB
